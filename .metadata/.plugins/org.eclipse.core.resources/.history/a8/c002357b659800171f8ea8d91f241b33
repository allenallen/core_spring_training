<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- : Add the component-scan element to this configuration. Be sure to 
		set the base-package to the same "rewards" value used in the ApplicationConfig.java 
		file (this XML configuration will replace the Java configuration file) -->
	<!-- <context:component-scan
		base-package="rewards.application, rewards.infrastructure.jdbc" /> -->

	<!-- : Add a bean definition to instantiate the JdbcAccountRepository. Give 
		the bean any id you like. Use a property sub-element to set the dataSource 
		property to a ref to a bean named "dataSource". (note that this bean is defined 
		elsewhere, so the editor may give you a warning.) -->
	<bean id="jdbcAccountRepository" class="rewards.infrastructure.jdbc.JdbcAccountRepository">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!--: Add a bean definition to instantiate the JdbcMerchantRepository. 
		It should have its dataSource property set the same way as the last bean. 
		Use the "init-method" attribute to call the "populateCache" method on startup. -->
	<bean id="jdbcMerchantRepository" class="rewards.infrastructure.jdbc.JdbcMerchantRepository"
		init-method="populateCache">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- : Add a bean definition to instantiate the JdbcRewardRepository. 
		It should have its dataSource property set the same way as the other beans. -->
		<bean id="jdbcRewardRepository" class="rewards.infrastructure.jdbc.JdbcRewardRepository">
			<property name="dataSource" ref="dataSource" />
		</bean>

	<!-- TODO 08: Add a bean definition to instantiate the RewardsApplicationServiceImpl. 
		Give the bean the id "rewardsService". Use three constructor-arg sub elements 
		to set its dependencies. -->
		<bean id="rewardsService" class="rewards.application.RewardsApplicationServiceImpl">
			<constructor-arg ref="jdbcAccountRepository" />
			<constructor-arg ref="jdbcMerchantRepository" />
			<constructor-arg ref="jdbcRewardRepository" />
		</bean>

	<!-- TODO 14 (Bonus): Now that we explicitly defined XML bean definitions 
		for all of our objects, does the <context:component-scan /> entry above serve 
		any purpose? Remove it and re-run the test. It should pass. -->

</beans>
