package rewards.application;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import rewards.domain.model.Account;
import rewards.domain.model.AccountRepository;
import rewards.domain.model.Merchant;
import rewards.domain.model.MerchantRepository;
import rewards.domain.model.RewardRepository;

@Service("rewardsService")
public class RewardsApplicationServiceImpl implements RewardsApplicationService {

	private AccountRepository accountRepository;
	private MerchantRepository merchantRepository;
	private RewardRepository rewardRepository;

	@Autowired
	public RewardsApplicationServiceImpl(AccountRepository accountRepository, MerchantRepository merchantRepository,
			RewardRepository rewardRepository) {
		super();
		this.accountRepository = accountRepository;
		this.merchantRepository = merchantRepository;
		this.rewardRepository = rewardRepository;
	}

	// TODO 01: Add transactional annotation to identify this method as needing
	// transactional behavior
	// Save your changes, and run RewardsApplicationServiceTests.
	// Inspect your console output to see if the same connection is being used.
	// Why did you get that output?
	// Proceed with the next steps and see if you can make use connections properly.
	@Transactional(propagation = Propagation.REQUIRED)
	@Override
	public RewardConfirmation rewardAccountFor(Purchase purchase) {
		// Reward an account
		Account account = accountRepository.findByCardNumber(purchase.getCardNumber());
		Merchant merchant = merchantRepository.findByNumber(purchase.getMerchantNumber());
		int pointsEarned = merchant.calculateRewardFor(account, purchase);
		account.credit(pointsEarned);
		accountRepository.updateAccount(account);
		// Return the corresponding reward confirmation
		return rewardRepository.confirmReward(purchase, account, pointsEarned);
	}

}
